pipeline {
    agent any
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        AWS_ACCOUNT_ID = credentials('AWSCRED')
        AWS_DEFAULT_REGION = 'us-east-1'       
        DOCKER_CREDENTIALS_ID = 'DOCKERHUB'
        image_name = 'khatab24/tetrisv1'
        GITHUB_REPO = 'https://github.com/Khatab24/End-to-End-Kubernetes-DevSecOps-Project.git'
        GITHUB_CREDENTIALS = 'GITHUB_TOKEN'
    }
    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout Code') {
            steps {
                git branch: 'master', credentialsId: "${GITHUB_CREDENTIALS}", url: "${GITHUB_REPO}"
            }
        }

        stage("Docker Image Build") {
            steps {
                script {
                    dir('Tetris-V1') {
                        withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {   
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t tetrisv1 .'
                        }
                    }
                }
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                dir('Tetris-V1') {
                    withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=TetrisVersion1.0 \
                        -Dsonar.projectKey=TetrisVersion1.0 '''
                    }
                }
            }
        }
        stage('Trivy File Scan') {
            steps {
                dir('Tetris-V1') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        stage("Docker Image Pushing") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'Dockerhub') {   
                        sh "docker tag tetrisv1 ${image_name}:${BUILD_NUMBER}"
                        sh "docker push ${image_name}:${BUILD_NUMBER}"
                    }
                }
            }
        }
        stage('Update Kubernetes Manifests') {
            steps {
                dir('Manifest-file/') {
                    script {
                        withCredentials([usernamePassword(credentialsId: "${GITHUB_CREDENTIALS}", usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                            sh """
                                git config --global user.name "Khatab24"
                                git config --global user.email "khatabahmed245@gmail.com"
                                sed -i "s|image: .*|image: ${image_name}:${BUILD_NUMBER}|" deployment-service.yml
                                git add deployment-service.yml
                                git commit -m "Update Frontend Deployment Image to ${BUILD_NUMBER}"
                                git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/Khatab24/End-to-End-Kubernetes-DevSecOps-Project.git master
                            """
                        }
                    }
                }
            }
        }
    }
}
