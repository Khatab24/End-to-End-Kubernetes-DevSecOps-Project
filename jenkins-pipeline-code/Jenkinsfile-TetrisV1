pipeline {
    agent any 
 //   tools {
       // jdk 'jdk'
     //   NodeJS 'NodeJS'
 //   }
    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'master', url: 'https://github.com/Khatab24/End-to-End-Kubernetes-DevSecOps-Project.git'
            }
        }
stage("Docker Image Build") {
            steps {
                script {
                    dir('Tetris-V1') {
                        withDockerRegistry(credentialsId: 'Dockerhub') {   
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t tetrisv1 .'
                        }
                    }
                }
            }
        }
        stage("Docker Image Pushing") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'Dockerhub') {   
                        sh 'docker tag tetrisv1 khatab24/tetrisv1:${BUILD_NUMBER}'
                        sh 'docker push khatab24/tetrisv1:${BUILD_NUMBER}'
                    }
                }
            }
        }
     //   stage("TRIVY Image Scan") {
     //       steps {
      //          sh 'trivy image khatab24/tetrisv1:${BUILD_NUMBER} > trivyimage.txt' 
     //       }
     //   }
        stage('Checkout Code') {
            steps {
                git branch: 'master', url: 'https://github.com/Khatab24/End-to-End-Kubernetes-DevSecOps-Project.git'
            }
        }
        stage('Update Image in deployment.yml') {
            steps {
                script {
                    def repoUrl = 'https://github.com/Khatab24/End-to-End-Kubernetes-DevSecOps-Project.git'
                    def branch = 'master'
                    def deploymentFile = 'deployment.yml'
                    def newImage = 'khatab24/tetrisv1:new-version' 

                    checkout([$class: 'GitSCM', branches: [[name: branch]], userRemoteConfigs: [[url: repoUrl]]])

                    def deploymentContent = readFile(file: deploymentFile)
                    deploymentContent = deploymentContent.replaceAll(/(image:\s*)(.*)/, "\$1${newImage}")
                    writeFile(file: deploymentFile, text: deploymentContent)

                    // Commit and push the changes
                    withCredentials([usernamePassword(credentialsId: 'GITHUB', usernameVariable: 'khatab24', passwordVariable: 'GIT_PASSWORD')]) {
                        sh """
                            git config --global user.name "Khatab24"
                            git config --global user.email "khatabahmed245@gmail.com"
                            git add ${deploymentFile}
                            git commit -m "Updated image to ${newImage}"
                            git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/Khatab24/End-to-End-Kubernetes-DevSecOps-Project.git ${branch}
                        """
                    }
                }
            }
        }
    }
}
